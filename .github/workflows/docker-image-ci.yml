name: Docker Image CI

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'Dockerfile'
      - 'LICENSE'
    branches:
      - develop
      - master
  pull_request:
    types:
      - opened
    branches:
      - develop
      - master
  release:
    types:
      - published
      - edited

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: "${{ github.repository }}"
  IMAGE_TAG : "${{ github.ref_name }}"
  IMAGE_TAG_SHA : "${{ github.ref_name }}-${{ github.sha }}"
  IMAGE_TAG_PULL : "merge-${{ github.sha }}"

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Show context values
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event_path: ${{ github.event_path }}"
          echo "github.ref_name  : ${{ github.ref_name }}"
          echo "github.ref       : ${{ github.ref }}"

  build:
    needs: init
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG_SHA }},enable=${{ startsWith(github.ref, 'refs/heads/')  }}
            type=raw,value=${{ env.IMAGE_TAG_PULL }},enable=${{ startsWith(github.ref, 'refs/pull') }}
            type=raw,value=${{ env.IMAGE_TAG }},enable=${{ startsWith(github.ref, 'refs/tags/v')  }}
          labels: |
            maintainer=Vijay Gill
            org.opencontainers.image.title=WireGuard UI Plus
            org.opencontainers.image.description=A Dockerised UI to run and manage a WireGuard VPN in the same container.
            org.opencontainers.image.vendor=GillSoft Limited

      - name: Generate build-args for docker image - live
        id: gen_docker_build_args_release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "APP_VERSION=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Generate build-args for docker image - non-live
        id: gen_docker_build_args_dev
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          echo "APP_VERSION=${{ env.IMAGE_TAG }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          provenance: false
          context: .
          file: dev.Dockerfile
          target: live
          build-args: |
            APP_VERSION=${{ steps.gen_docker_build_args_release.outputs.APP_VERSION }}${{ steps.gen_docker_build_args_dev.outputs.APP_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

